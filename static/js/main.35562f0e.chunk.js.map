{"version":3,"sources":["store/movieReducer.js","api/omdAPI.js","store/favoritesReducer.js","api/favoritesAPI.js","App.js","serviceWorker.js","index.js"],"names":["movieReducer","state","action","type","isLoadingError","data","payload","Error","useOMDApi","useState","url","setUrl","useReducer","dispatch","useEffect","a","axios","result","fetchData","favoritesReducer","editedFavorites","favorites","undefined","push","Object","values","forEach","movie","imdbID","isAddingError","isRemovingError","useFavorites","favorite","setFavorite","actionRequired","setActionRequired","showFavorites","error","styles","content","display","flexDirection","flex","position","alignItems","justifyContent","height","searchForm","overflowX","margin","padding","width","loginForm","loginPaper","paper","minWidth","grid","flexWrap","marginTop","text","color","fontSize","titleText","importantText","fontWeight","searchResultText","searchButton","marginRight","backgroundColor","disabledButton","addButton","submitButton","removeButton","App","titleQuery","setTitleQuery","isUserValidated","setIsUserValidated","login","setLogin","password","setPassword","isLoading","doFetch","console","log","Title","style","key","onSubmit","event","preventDefault","value","placeholder","onChange","target","Button","Paper","length","onClick","map","Genre","imdbRating","Year","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35562f0e.chunk.js","sourcesContent":["\nconst movieReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOAD_INIT':\n      return {\n        ...state,\n        isLoadingError: false\n      };\n    case 'LOAD_COMPLETE':\n      return {\n        ...state,\n        isLoadingError: false,\n        data: action.payload,\n      };\n    case 'LOAD_FAILURE':\n      return {\n        ...state,\n        isLoadingError: true,\n      };\n    default:\n      throw new Error();\n  }\n};\nexport default movieReducer;","//custom hook for useEffect\nimport React, { Fragment, useState, useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport movieReducer from '../store/movieReducer';\nconst useOMDApi = () => {\n    //TODO: change to url with API key only and pass query parameter from the form\n    const [url, setUrl] = useState(\n      `http://www.omdbapi.com/?apikey=68ac16ce`,\n    );\n    const [state, dispatch] = useReducer(movieReducer, {\n      isLoadingError: false,\n      data: {},\n    });\n    \n    useEffect(() => {\n      const fetchData = async () => {\n        dispatch({ type: 'LOAD_INIT' });\n        try {\n          const result = await axios(url);\n          dispatch({ type: 'LOAD_COMPLETE', payload: result.data });\n        } catch (error) {\n          dispatch({ type: 'LOAD_FAILURE' });\n        }\n      };\n      fetchData();\n    }, [url]);\n    return [state, setUrl];\n  }\n  export default useOMDApi;","\n const favoritesReducer = (state, action) => {\n    let editedFavorites = [];\n    const newFavorite = action.payload;\n  let favorites = state.favorites;\n    switch (action.type) {\n        case 'ADD_FAVORITE':\n        if(action.payload !== undefined){\n          favorites.push(action.payload);\n          return {\n                    ...state,\n                    favorites,\n                  };\n        } else {\n          return state;\n        }\n        case 'REMOVE_FAVORITE':\n            if(favorites !== undefined){\n              Object.values(favorites).forEach(movie => {\n                if (movie.imdbID !== action.payload.imdbID) {\n                  editedFavorites.push(movie);\n                }\n              });\n              return {\n                ...state,\n                favorites: editedFavorites,\n              };\n            } else {\n              return state;\n            }\n        case 'ADD_FAILURE':\n            return {\n             ...state,\n            isAddingError: true,\n                    };\n        case 'REMOVE_FAILURE':\n            return {\n             ...state,\n            isRemovingError: true,\n                              };\n      default:\n        throw new Error();\n    }\n  };\n  export default favoritesReducer;","//custom hook for useEffect\nimport React, { Fragment, useState, useEffect, useReducer } from 'react';\nimport favoritesReducer from '../store/favoritesReducer';\nconst useFavorites = () => {\n    const [favorite, setFavorite] = useState();\n    const [actionRequired, setActionRequired] = useState();\n    const [state, dispatch] = useReducer(favoritesReducer, {\n      showFavorites: false,\n      isAddingError: false,\n      isRemovingError: false,\n      favorites: [],\n    });\n    useEffect(() => {\n      switch(actionRequired){\n        case 'add':\n            try {\n              dispatch({ type: 'ADD_FAVORITE', payload: favorite });\n              //TODO: add WebAPI call here\n            } catch (error) {\n              dispatch({ type: 'ADD_FAILURE' });\n            }\n            break;\n        case 'remove':\n            try {\n              dispatch({ type: 'REMOVE_FAVORITE', payload: favorite });\n              //TODO: add WebAPI call here\n            } catch (error) {\n              dispatch({ type: 'REMOVE_FAILURE' });\n            }\n  \n      }\n   }, [favorite, actionRequired]);\n    return [state, setFavorite, setActionRequired];\n  }\n\n  export default useFavorites;","import React, { Fragment, useState, useEffect, useReducer } from 'react';\nimport { Button, Paper } from '@material-ui/core';\n\nimport useOMDApi from './api/omdAPI';\nimport useFavorites from './api/favoritesAPI';\n\n//TODO: add styles\nconst styles = {\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: '1 1 auto',\n    position: 'relative',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    height: '100%',\n  },\n  searchForm: {\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'relative',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    overflowX: 'hidden',\n    margin: 10,\n    padding: 5,\n    width: 'auto',\n    height: 120,\n  },\n  loginForm: {\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'relative',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    overflowX: 'hidden',\n    margin: 10,\n    padding: 5,\n    width: 'auto',\n    height: 150,\n},\n  loginPaper: {\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'relative',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    overflowX: 'hidden',\n    margin: 10,\n    padding: 5,\n    width: 'auto',\n    height: 200,\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'relative',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    overflowX: 'hidden',\n    margin: 10,\n    padding: 5,\n    minWidth: 150,\n    height: 200,\n  },\n  grid: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    height: '100%',\n    marginTop: 20,\n  },\n  text: {\n    flex: '1 1 auto',\n    color: 'black',\n    fontSize: '1em',\n    margin: 5,\n  },\n  titleText: {\n    flex: '1 1 auto',\n    color: 'black',\n    fontSize: '2em',\n    margin: 5,\n  },\n  importantText: {\n    flex: '1 1 auto',\n    color: 'red',\n    fontSize: '1em',\n    fontWeight: 600,\n  },\n  searchResultText: {\n    flex: '1 1 auto',\n    color: 'black',\n    fontSize: '1.2em',\n    fontWeight: 600,\n    marginTop: 40,\n  },\n  searchButton: {\n    marginRight: 10,\n    width: 130,\n    height: 40,\n    backgroundColor: '#303030',\n    color: 'white',\n  },\n  disabledButton: {\n    marginRight: 10,\n    width: 200,\n    height: 40,\n    color: 'white',\n  },\n  addButton: {\n    marginRight: 10,\n    width: 200,\n    height: 40,\n    backgroundColor: '#556b2f',\n    color: 'white',\n  },\n  submitButton: {\n    marginRight: 10,\n    width: 200,\n    height: 40,\n    backgroundColor: 'grey',\n    color: 'white',\n  },\n  removeButton: {\n    marginRight: 10,\n    width: 130,\n    height: 40,\n    backgroundColor: '#8B0000',\n    color: 'white',\n  },\n};\n\nfunction App() {\nconst [titleQuery, setTitleQuery] = useState('');\nconst [isUserValidated, setIsUserValidated] = useState(false);\n//TODO: the user and password are set for default for UI testing only\nconst [login, setLogin] = useState('user');\nconst [password, setPassword] = useState('password');\n\nconst [{ data, isLoading, isLoadingError }, doFetch] = useOMDApi();\nconst [{favorites, actionRequired, isAddingError, isRemovingError}, setFavorite, setActionRequired] = useFavorites();\n\nconst displaySearchMoviesForm = () => {\n  return(\n <div style={styles.searchForm}>\n    <form onSubmit={event => {\n      doFetch(`http://www.omdbapi.com/?apikey=68ac16ce&t=${titleQuery}`);\n      event.preventDefault();\n      }}>\n      <input\n        type=\"text\"\n        style={styles.text}\n        value={titleQuery}\n        placeholder=\"Enter the movie title here\"\n        onChange={event => setTitleQuery(event.target.value)}\n      />\n      <Button style={styles.searchButton} type=\"submit\">Search</Button>\n      </form>\n      <div key={data.imdbID} style={styles.searchResultText}>\n        {data.Title}\n      </div>\n      {isLoadingError && <div>Error loading your movie. Perhaps you are experience network interruptions. Please try again!</div>}\n </div>)};\n\n    const displayUserLoginForm = () => {\n      return(\n      <Paper\n      key={login} style={styles.loginPaper}\n    >\n      <div style={styles.text}>\n     You have to be logged in to save the movies to Favorites:\n      </div>\n      <div style={styles.importantText}>\n    The Login and Password fields cannot be empty\n      </div>\n      <form style={styles.loginForm} onSubmit={event => {\n     login.length > 0 && password.length > 0 ? setIsUserValidated(true) : setIsUserValidated(false);\n      event.preventDefault();\n      }}>\n      <input\n        type=\"text\"\n        style={styles.text}\n        value={login}\n        onChange={event => setLogin(event.target.value)}\n      />\n      <input\n        type=\"text\"\n        style={styles.text}\n        value={password}\n        onChange={event => setPassword(event.target.value)}\n      />\n            <Button style={styles.submitButton} type=\"submit\">Login</Button>\n      </form>\n      </Paper>)};\n\n      \nconst displayFavorites = () => Object.values(favorites).map(favorite => {\n  const { imdbID, Title, Genre, imdbRating, Year } = favorite;\n\n        return (\n          <Paper\n            key={`paper${imdbID}`} style={styles.paper}\n          >\n              <div key={`title${imdbID}`} style={{fontSize: '1.2em', fontWeight: 600}}>\n              Movie Title: {Title}\n              </div>\n              <div key={`genre${imdbID}`}>\n              Genre: {Genre}\n              </div>\n              <div key={`imdbRating${imdbID}`}>\n              IMDB Rating: {imdbRating}\n              </div>\n              <div key={`year${imdbID}`}>\n              Year: {Year}\n              </div>\n           <div>\n            <Button type=\"button\" style={styles.removeButton} onClick={() => {setFavorite(favorite); setActionRequired('remove')}}>\n               Remove\n              </Button>\n              {isRemovingError && <div>There was a problem removing your movie from Favorites!</div>}\n              </div>\n            \n          </Paper>\n        );\n    });\n  console.log('data.title', data.Title);\n  return (\n     <div style={styles.content}>\n       <div key='app' style={styles.titleText}>\n         Open Movie Database Search\n       </div>\n     {displaySearchMoviesForm()}\n      <div>\n      {!isUserValidated && (displayUserLoginForm())}\n      </div>\n      {isUserValidated && (\n        <div>\n      <div style={styles.content}>\n        {(data.Title !== null && data.Title !== undefined) &&(\n      <Button\n      type=\"button\"\n      style={styles.addButton}\n      onClick={() => {setFavorite(data); setActionRequired('add')}}\n    >{`Add to favorites`}</Button>\n        )}\n         {isAddingError && <div>There was a problem adding your movie to Favorites!</div>}\n        </div>\n        <div key={favorites.length} style={styles.grid}>\n        {favorites.length > 0 && displayFavorites()}\n        </div>\n        </div>\n      )}\n      </div>\n  );\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}